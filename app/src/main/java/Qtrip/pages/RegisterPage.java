package Qtrip.pages;

import java.util.UUID;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import Qtrip.SeleniumWrapper;

public class RegisterPage {

    WebDriver driver;

    private final static String REGISTER_PAGE_IDENTIFIER = "/pages/register/";
    
    String url="https://qtripdynamic-qa-frontend.vercel.app/pages/register/";

    public static String USER_EMAIL;

    public RegisterPage(WebDriver driver){
        this.driver=driver;
        PageFactory.initElements(driver, this);
    }

    public void navigateToRegisterPage() {
        if (!driver.getCurrentUrl().equals(this.url)) {
            driver.get(this.url);
        }
    }

    @FindBy(name = "email")
    private WebElement emailTextBox;

    @FindBy(name = "password")
    private WebElement passwordTextBox;

    @FindBy(name = "confirmpassword")
    private WebElement confirmPasswordTextBox;

    @FindBy(xpath = "//button[text()='Register Now']")
    private WebElement registerNowButton;
    
    @FindBy(xpath = "//div[contains(@class, 'card border')]")
    private WebElement registerFormLayout;

    public boolean checkRegisterPageNavigation(){
        return driver.getCurrentUrl().contains(REGISTER_PAGE_IDENTIFIER) && registerFormLayout.isDisplayed();
    }
    
    public void registerANewUser(String emailAddress, String password, String confirmPassword, boolean isUserAutoGenerated) throws InterruptedException{
        if(isUserAutoGenerated && emailAddress.equals("")){
            USER_EMAIL = String.format("testuser_%s@gmail.com", UUID.randomUUID().toString());
        }
        else if(isUserAutoGenerated && !emailAddress.equals("")){
            USER_EMAIL = String.format("%s"+emailAddress, UUID.randomUUID().toString());
        }
        else{
            USER_EMAIL=emailAddress;
        }
        // emailTextBox.sendKeys(USER_EMAIL);
        SeleniumWrapper.sendKeys(emailTextBox, USER_EMAIL);
        Thread.sleep(1000);
        // passwordTextBox.sendKeys(password);
        SeleniumWrapper.sendKeys(passwordTextBox, password);
        Thread.sleep(1000);
        // confirmPasswordTextBox.sendKeys(confirmPassword);
        SeleniumWrapper.sendKeys(confirmPasswordTextBox, confirmPassword);
        Thread.sleep(1000);
        // registerNowButton.click();
        SeleniumWrapper.click(registerNowButton, driver);
        Thread.sleep(3000);
    }
}
